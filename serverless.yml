# NOTE: update this with your service name
service: notes-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
#  - serverless-bundle # Package our functions with Webpack
#  - serverless-offline
  - serverless-localstack
#  - serverless-dotenv-plugin # Load .env as environment variables

custom:
  localstack:
    debug: true
    stages:
      - local
    host: http://localhost
    edgePort: 4566
    lambda:
      mountCode: true

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 128
  lambdaHashingVersion: 20201221
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: 
            - "dynamodb:Scan"
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:Query"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:DescribeTable"
            - "dynamodb:DescribeStream"
            - "dynamodb:GetRecords"
            - "dynamodb:GetShardIterator"
            - "dynamodb:ListStreams"
          Resource: 
            - Fn::GetAtt:
              - NotesTable
              - Arn
  environment:
    TableName: "notes-${opt:stage}"


# Lambda Functions
functions:
  create:
    handler: handlers/create.main
    events:
      - http:
          path: notes
          method: post

  get:
    handler: handlers/get.main
    events:
      - http:
          path: notes/{id}
          method: get

  list:
    handler: handlers/list.main
    events:
      - http:
          path: notes
          method: get

  update:
    handler: handlers/update.main
    events:
      - http:
          path: notes/{id}
          method: put

  delete:
    handler: handlers/delete.main
    events:
      - http:
          path: notes/{id}
          method: delete

# DynamoDB
resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "notes-${opt:stage}"
        AttributeDefinitions:
          - AttributeName: "userId"
            AttributeType: "S"
          - AttributeName: "noteId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "userId"
            KeyType: "HASH"
          - AttributeName: "noteId"
            KeyType: "RANGE"
        BillingMode: "PAY_PER_REQUEST"
